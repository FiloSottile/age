.Dd June 28, 2020
.Dt AGE 1
.Os
.Sh NAME
.Nm age
.Nd a simple, modern and secure file encryption tool
.Sh SYNOPSIS
.Nm
.Fl r Ar recipient
.Op Fl a
.Op Fl o Ar output
.Op Ar input
.Nm
.Fl -decrypt
.Op Fl i Ar key
.Op Fl o Ar output
.Op Ar input
.Sh DESCRIPTION
With
.Fl r
/
.Fl -recipient ,
.Nm
encrypts
.Ar input
to the specified
.Ar recipient .
With
.Fl d
/
.Fl -decrypt ,
.Nm
decrypts
.Ar input .
.Pp
The following options are available:
.Bl -tag -width Ds -compact
.It Fl o , Fl -output Ar output
Write the result to the file at path
.Ar output .
.Nm
will exit with an error if
.Ar output
already exists.
.It Fl a , Fl -armor
Encrypt to a PEM encoded format.
.It Fl p , Fl -passphrase
Encrypt with a passphrase.
.It Fl r , Fl -recipient Ar recipient
Encrypt to the specified
.Ar recipient .
.It Fl d , Fl -decrypt
Decrypt the input to the output.
.It Fl i , Fl -identity Ar key
Use the private key file at path
.Ar key .
.El
.Pp
The
.Ar input
argument is optional and defaults to standard input.
Only a single file may be specified.
If
.Fl o
is not specified then
.Ar output
defaults to standard output.
.Pp
The
.Ar recipient
can be an
.Nm
public key, as generated by 
.Nm age-keygen ,
.Po
.Qq age1...
.Pc
or an SSH public key
.Po
.Qq ssh-ed25519 AAAA... ,
.Qq ssh-rsa AAAA...
.Pc .
.Pp
The identity
.Ar key
supplied to
.Fl i
/
.Fl -identity
is a path to a file with
.Nm
secret keys, one per line
.Po
ignoring
.Qq #
prefixed comments and empty lines
.Pc ,
or to an SSH key file.
Multiple keys can be provided, and any unused ones will be ignored.
.Ss Multiple recipients
Files can be encrypted to multiple recipients by repeating
.Fl r
/
.Fl -recipient .
Every recipient will be able to decrypt the file.
.Ss Passphrases
Files can be encrypted with a passphrase instead of a secret key using
.Fl p
/
.Fl -passphrase .
By default
.Nm
will automatically generate a secure passphrase.
Passphrase protected files are automatically detected at decrypt time.
.Ss SSH keys
As a convenience feature,
.Nm
also supports encrypting to
.Nm ssh-rsa
and
.Nm ssh-ed25519
SSH public keys, and decypting with the respective private key file.
.Po
.Nm ssh-agent
is not supported.
.Pc
.Pp
Note that SSH key support employs more complex cryptography, and embeds a
public key tag in the encrypted file, making it possible to track files that
are encrypted to a specific public key.
.Sh EXAMPLES
Generate a secret key, encrypt data, and decrypt:
.Pp
.Bd -literal -offset indent
$ age-keygen -o key.txt
Public key: age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p
$ tar cvz ~/data | age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p > data.tar.gz.age
$ age -d -i key.txt -o data.tar.gz data.tar.gz.age
.Ed
.Pp
Encrypt
.Pa example.jpg
to multiple recipients and output to
.Pa example.jpg.age :
.Bd -literal -offset indent
$ age -o example.jpg.age -r age1ql3z7hjy54pw3hyww5ayyfg7zqgvc7w3j2elw8zmrj2kg5sfn9aqmcac8p \e
-r age1lggyhqrw2nlhcxprm67z43rta597azn8gknawjehu9d9dl0jq3yqqvfafg example.jpg
.Ed
.Pp
Encrypt a file using a passphrase:
.Bd -literal -offset indent
$ age -p secrets.txt > secrets.txt.age
Enter passphrase (leave empty to autogenerate a secure one):
Using the autogenerated passphrase "release-response-step-brand-wrap-ankle-pair-unusual-sword-train".
.Ed
.Pp
Decrypt a file protected by a passphrase:
.Bd -literal -offset indent
$ age -d secrets.txt.age > secrets.txt
Enter passphrase:
.Ed
.Pp
Encrypt
.Pa example.jpg
to an SSH public key:
.Bd -literal -offset indent
$ cat ~/.ssh/id_ed25519.pub
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIZDRcvS8PnhXr30WKSKmf7WKKi92ACUa5nW589WukJz filippo@Bistromath.local
$ age -r "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIZDRcvS8PnhXr30WKSKmf7WKKi92ACUa5nW589WukJz" example.jpg > example.jpg.age
.Ed
.Pp
Decrypt using an SSH private key:
.Pp
.Dl $ age -d -i ~/.ssh/id_ed25519 example.jpg.age > example.jpg
.Sh SEE ALSO
.Xr age-keygen 1
